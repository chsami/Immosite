# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-06-15 14:51
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bezichtiging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voornaam_bezoeker', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')], verbose_name='Voornaam')),
                ('achternaam_bezoeker', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')], verbose_name='Achternaam')),
            ],
            options={
                'verbose_name_plural': 'Bezichtigingen',
            },
        ),
        migrations.CreateModel(
            name='Criteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('naam_en', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('naam_fr', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
            ],
            options={
                'verbose_name_plural': "Criteria's",
            },
        ),
        migrations.CreateModel(
            name='DynamicPageContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=140, unique=True)),
                ('title', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='DynamicPageContent_EN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=140, unique=True)),
                ('title', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='DynamicPageContent_FR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=140, unique=True)),
                ('title', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Eigenschap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('naam_en', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('naam_fr', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
            ],
            options={
                'verbose_name_plural': 'Eigenschappen',
            },
        ),
        migrations.CreateModel(
            name='Fase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.CharField(max_length=15)),
                ('naam_en', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('naam_fr', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
            ],
            options={
                'verbose_name_plural': 'Pand Fases',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='media/', verbose_name='File')),
            ],
        ),
        migrations.CreateModel(
            name='MainDynamicPageContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_content_en', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.DynamicPageContent_EN')),
                ('page_content_fr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.DynamicPageContent_FR')),
                ('page_content_nl', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.DynamicPageContent')),
            ],
        ),
        migrations.CreateModel(
            name='Nieuwsbrief',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='Emailadres')),
                ('actief', models.BooleanField(default=False)),
                ('activate_code', models.CharField(editable=False, max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Contacten Nieuwsbrief',
            },
        ),
        migrations.CreateModel(
            name='Pand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referentienummer', models.CharField(max_length=255, unique=True)),
                ('inkijker', models.BooleanField()),
                ('straat_naam', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('huis_nummer', models.IntegerField()),
                ('stad', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('gemeente', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('postcode', models.IntegerField()),
                ('bouwjaar', models.IntegerField(blank=True, null=True)),
                ('prijs', models.PositiveIntegerField()),
                ('beschrijving', models.TextField()),
                ('hits', models.IntegerField(default=0)),
                ('profiel_foto', models.FileField(default='', upload_to='media/', verbose_name='Profiel_foto')),
                ('datum', models.DateField(auto_now_add=True)),
                ('aantal_kamers', models.IntegerField()),
                ('land', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('plattegrond_gelijksvloer', models.FileField(blank=True, default='', upload_to='media/', verbose_name='Plattegrond_gelijksvloer')),
                ('plattegrond_eerste_verdiep', models.FileField(blank=True, default='', upload_to='media/', verbose_name='Plattegrond_gelijksvloer')),
                ('verdieping', models.IntegerField()),
                ('fase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.Fase')),
            ],
            options={
                'ordering': ['user'],
                'verbose_name_plural': 'Pand',
            },
        ),
        migrations.CreateModel(
            name='PandBezichtiging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datum', models.DateTimeField()),
                ('bezichtiging', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.Bezichtiging')),
                ('pand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.Pand')),
            ],
            options={
                'verbose_name_plural': 'Pand bezichtigingen',
            },
        ),
        migrations.CreateModel(
            name='PandCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aantal', models.SmallIntegerField(default=1)),
                ('criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.Criteria')),
                ('pand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.Pand')),
            ],
            options={
                'verbose_name_plural': "Pand criteria's",
            },
        ),
        migrations.CreateModel(
            name='PandEigenschap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oppervlakte', models.IntegerField(blank=True)),
                ('eenheid', models.CharField(blank=True, default='m', max_length=10)),
                ('eigenschap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.Eigenschap')),
                ('pand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.Pand')),
            ],
            options={
                'verbose_name_plural': 'Pand eigenschappen',
            },
        ),
        migrations.CreateModel(
            name='PandHitCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=140)),
                ('unieke_bezoekers', models.SmallIntegerField(default=0)),
                ('aantal', models.SmallIntegerField(default=0)),
                ('pand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.Pand')),
            ],
            options={
                'verbose_name_plural': "Pand hit count's",
            },
        ),
        migrations.CreateModel(
            name='PandVerbruiksType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.Pand')),
            ],
            options={
                'verbose_name_plural': 'Pand verbruikstypen',
            },
        ),
        migrations.CreateModel(
            name='PandWettelijk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oppervlakte', models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator('^[0-9]+(\\.[0-9]{1,5})?$', 'Enkel decimalen toegelaten bv. 0.1')])),
                ('eenheid', models.CharField(blank=True, default='M', max_length=10)),
                ('jaartal', models.IntegerField()),
                ('pand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.Pand')),
            ],
            options={
                'verbose_name_plural': 'Wettelijke informaties van panden',
            },
        ),
        migrations.CreateModel(
            name='Staat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.CharField(max_length=65, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('naam_en', models.CharField(max_length=65, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('naam_fr', models.CharField(max_length=65, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
            ],
            options={
                'verbose_name_plural': 'Pand Staten',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.CharField(max_length=65, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('naam_en', models.CharField(max_length=65, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('naam_fr', models.CharField(max_length=65, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
            ],
            options={
                'verbose_name_plural': 'Pand Statussen',
            },
        ),
        migrations.CreateModel(
            name='Supportticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=255)),
                ('beschrijving', models.TextField()),
                ('datum', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Supporttickets',
            },
        ),
        migrations.CreateModel(
            name='TypeHuis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.CharField(max_length=65, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('naam_en', models.CharField(max_length=65, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
                ('naam_fr', models.CharField(max_length=65, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
            ],
            options={
                'verbose_name_plural': 'Pand Type huizen',
            },
        ),
        migrations.CreateModel(
            name='VerbruiksType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
            ],
            options={
                'verbose_name_plural': 'Verbruikstypen',
            },
        ),
        migrations.CreateModel(
            name='Wettelijk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z\xe9\xe0_ ]*$', 'Enkel letters toegelaten bv a-z,A-Z')])),
            ],
            options={
                'verbose_name': 'wettelijke informatie',
                'verbose_name_plural': 'Wettelijke informaties',
            },
        ),
        migrations.AddField(
            model_name='pandwettelijk',
            name='wettelijk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.Wettelijk', verbose_name='wettelijke informatie'),
        ),
        migrations.AddField(
            model_name='pandverbruikstype',
            name='verbruik',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.VerbruiksType'),
        ),
        migrations.AddField(
            model_name='pand',
            name='staat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.Staat'),
        ),
        migrations.AddField(
            model_name='pand',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.Status'),
        ),
        migrations.AddField(
            model_name='pand',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.TypeHuis'),
        ),
        migrations.AddField(
            model_name='pand',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='image',
            name='pand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='master.Pand'),
        ),
        migrations.AlterUniqueTogether(
            name='pandcriteria',
            unique_together=set([('pand', 'criteria')]),
        ),
        migrations.AlterUniqueTogether(
            name='pandbezichtiging',
            unique_together=set([('pand', 'bezichtiging', 'datum')]),
        ),
    ]
